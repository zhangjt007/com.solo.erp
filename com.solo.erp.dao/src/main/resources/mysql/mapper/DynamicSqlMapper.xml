<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solo.erp.dao.mapper.DynamicSqlMapper">

    <resultMap id="BaseResultMap" type="java.util.HashMap">
        <id column="id" jdbcType="INTEGER" javaType="Integer" property="id"/>
        <id column="shop_id" jdbcType="INTEGER" javaType="Integer" property="shop_id"/>
        <id column="is_enable" jdbcType="INTEGER" javaType="Integer" property="is_enable"/>
        <id column="product_id" jdbcType="INTEGER" javaType="Integer" property="product_id"/>
        <id column="inventory_id" jdbcType="INTEGER" javaType="Integer" property="inventory_id"/>

    </resultMap>

    <select id="selectAllMenuAndRole" resultMap="BaseResultMap">
        SELECT
	d.url,
	group_concat( d.NAME SEPARATOR '|' ) as role_names
FROM
	(
	SELECT
		a.url,
		c.NAME
	FROM
		erp_menu_info AS a
		LEFT JOIN erp_role_menu_rel AS b ON a.id = b.menu_id
		LEFT JOIN erp_role_info AS c ON b.role_id = c.id
	WHERE
		a.is_enable = '1'
		AND c.is_enable = '1'
	) AS d
GROUP BY
	d.url;
    </select>


    <select id="statisticsSaleInfoByDay" resultMap="BaseResultMap">
        SELECT
        IFNULL(SUM( CASE WHEN a.order_type = '0' THEN 1 ELSE 0 END ),0) AS order_count,
        IFNULL(sum( a.pay_amount ),0) AS sum_amount,
        IFNULL(sum( a.total_num ),0) AS product_num
        FROM
        erp_order_info a
        WHERE
        a.order_date = #{date}
        AND a.order_status != '0'
        AND shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>;
    </select>

    <select id="statisticsSaleInfoByPeriod" resultMap="BaseResultMap">
        SELECT
        c.date AS order_date,
        IFNULL( b.order_count, 0 ) AS order_count,
        IFNULL( b.sum_amount, 0 ) AS sum_amount,
        IFNULL( b.product_num, 0 ) AS product_num
        FROM
        (
        SELECT
        a.order_date,
        SUM( CASE WHEN a.order_type = '0' THEN 1 ELSE 0 END ) AS order_count,
        sum( a.pay_amount ) AS sum_amount,
        sum( a.total_num ) AS product_num
        FROM
        erp_order_info a
        WHERE
        a.order_date BETWEEN #{startDate} AND #{endDate}
        AND a.order_status != '0'
        AND shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>
        GROUP BY
        a.order_date
        ) AS b
        RIGHT JOIN erp_dates c ON b.order_date = c.date
        WHERE
        c.date BETWEEN #{startDate} AND #{endDate}
        ORDER BY
        c.date;
    </select>

    <select id="statisticsOpenVIPByDay" resultMap="BaseResultMap">
        SELECT
        count( a.create_date ) AS vip_count
        FROM
        erp_vip_info AS a
        WHERE
        a.create_date = #{date}
        AND a.is_enable = '1'
        AND EXISTS ( SELECT 1 FROM erp_staff_info b WHERE b.id = a.staff_id AND b.shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>
        );
    </select>

    <select id="statisticsOpenVIPByPeriod" resultMap="BaseResultMap">
        SELECT
        c.date AS create_date,
        IFNULL( b.vip_count, 0 ) AS vip_count
        FROM
        (
        SELECT
        a.create_date,
        count( a.create_date ) AS vip_count
        FROM
        erp_vip_info AS a
        WHERE
        a.create_date BETWEEN #{startDate} AND #{endDate}
        AND a.is_enable = '1'
        AND EXISTS ( SELECT 1 FROM erp_staff_info b WHERE b.id = a.staff_id AND b.shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>
        )
        GROUP BY
        a.create_date
        ) AS b
        RIGHT JOIN erp_dates c ON b.create_date = c.date
        WHERE
        c.date BETWEEN #{startDate} AND #{endDate}
        ORDER BY
        c.date
    </select>

    <select id="statisticTopSaleProduct" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        (
        SELECT
        a.product_no,
        SUM( a.real_price * a.num ) AS amount
        FROM
        erp_order_detail a
        WHERE
        a.order_status != '0'
        AND a.shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>
        AND a.order_date BETWEEN #{startDate} AND #{endDate}
        GROUP BY
        a.product_no
        LIMIT ${limit}
        ) AS b
        ORDER BY
        b.amount;
    </select>
    <select id="statisticByProductType" resultMap="BaseResultMap">
        SELECT
        b.product_type,
        SUM( a.real_price * a.num ) AS amount
        FROM
        erp_order_detail a
        LEFT JOIN erp_product_info b ON a.product_no = b.product_no
        WHERE
        a.order_status != '0'
        AND a.shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>
        AND a.order_date BETWEEN #{startDate} AND #{endDate}
        GROUP BY
        b.product_type
    </select>
    <select id="statisticsSaleInfo" resultMap="BaseResultMap">
        SELECT
        b.*,
        CONVERT ( b.sum_real_price_num*100 / b.sum_tag_price_num, DECIMAL ( 11, 2 ) ) AS sale_ratio
        FROM
        (
        SELECT
        a.product_no,
        a.color,
        SUM( CASE WHEN a.size = 1 THEN a.num ELSE 0 END ) s_sum_num,
        SUM( CASE WHEN a.size = 2 THEN a.num ELSE 0 END ) m_sum_num,
        SUM( CASE WHEN a.size = 3 THEN a.num ELSE 0 END ) l_sum_num,
        SUM( CASE WHEN a.size = 4 THEN a.num ELSE 0 END ) xl_sum_num,
        SUM( CASE WHEN a.size = 5 THEN a.num ELSE 0 END ) f_sum_num,
        SUM( a.num ) AS sum_num,
        CONVERT ( AVG( a.tag_price ), DECIMAL ( 11, 2 ) ) AS avg_tag_price,
        SUM( a.tag_price * a.num ) AS sum_tag_price_num,
        CONVERT ( AVG( a.real_price ), DECIMAL ( 11, 2 ) ) AS avg_real_price,
        SUM( a.real_price * a.num ) AS sum_real_price_num
        FROM
        erp_order_detail a
        WHERE
        a.order_date BETWEEN #{startDate} AND #{endDate}
        AND a.order_status != '0'
        AND a.shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>
        GROUP BY
        a.product_no,
        a.color
        ) AS b
        ORDER BY
        b.product_no,
        b.color;
    </select>
    <select id="statisticsVIPSaleInfo" resultMap="BaseResultMap">
        SELECT
        b.*,
        CONVERT ( b.vip_sum_amount*100 / b.sum_amount, DECIMAL ( 11, 2 ) ) AS vip_ratio
        FROM
        (
        SELECT
        a.shop_id,
        ( SELECT b.shop_name FROM erp_shop_info b WHERE b.id = a.shop_id ) AS shop_name,
        SUM( a.num ) AS sum_num,
        SUM( a.real_price * a.num ) AS sum_amount,
        SUM( CASE WHEN a.vip_mobile IS NOT NULL THEN a.num ELSE 0 END ) vip_sum_num,
        SUM( CASE WHEN a.vip_mobile IS NOT NULL THEN a.num * a.real_price ELSE 0 END ) vip_sum_amount
        FROM
        erp_order_detail a
        WHERE
        a.order_date BETWEEN #{startDate} AND #{endDate}
        AND a.order_status != '0'
        AND a.shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>
        GROUP BY
        a.shop_id
        ) AS b
        ORDER BY
        b.shop_id
    </select>
    <select id="selectVIPByLastBrithday" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        erp_vip_info
        WHERE
        DATE_FORMAT( brithday, '%m-%d' ) BETWEEN #{startDate1}
        AND #{endDate1}
        <if test="startDate2 != null">
            OR DATE_FORMAT( brithday, '%m-%d' ) BETWEEN #{startDate2}
            AND #{endDate2}
        </if>
        ORDER BY
        brithday
    </select>

    <select id="statisticsOrderTime" resultMap="BaseResultMap">
        SELECT
        b.date,
        b.time,
        COUNT( b.date ) AS num
        FROM
        (
        SELECT
        DATE_FORMAT( a.order_date, '%m-%d' ) AS date,
        DATE_FORMAT( a.gmt_modified, '%H' ) AS time
        FROM
        erp_order_info a
        WHERE
        a.shop_id IN
        <foreach collection="shopIds" item="shopId" open="(" separator="," close=")">
            #{shopId}
        </foreach>
        AND a.order_status = '1'
        AND a.order_date BETWEEN #{startDate}
        AND #{endDate}
        ) AS b
        GROUP BY
        b.date,
        b.time;
    </select>

    <update id="addInventoryNumByProductSn">
        UPDATE erp_inventory_info a
        SET a.num = a.num + ${inc}
        WHERE
        a.shop_id = ${shopId}
        AND a.product_sn = #{productSn};
    </update>
    <update id="addScoreAndHisScoreByVipId">
        UPDATE erp_vip_info a
        SET a.score = a.score + ${score},a.history_score = a.history_score + ${score}
        WHERE
	    a.id = ${vipId};
    </update>

    <update id="addScoreByVipId">
        UPDATE erp_vip_info a
        SET a.score = a.score + ${score}
        WHERE
        a.id = ${vipId};
    </update>
</mapper>